{"ast":null,"code":"import _classCallCheck from\"C:/Users/Huawei/Desktop/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Huawei/Desktop/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var url=_ref.url,headers=_ref.headers;_classCallCheck(this,Api);this._url=url;this._headers=headers;}_createClass(Api,[{key:\"_checkRes\",value:function _checkRes(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}// Карточки должны отображаться на странице только после получения id пользователя\n},{key:\"proceedFromServer\",value:function proceedFromServer(){return Promise.all([this.getInitialCards(),this.getUserObj()]);}},{key:\"getUserObj\",value:function getUserObj(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._checkRes);}// Загрузка карточек \n},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._checkRes);}},{key:\"changeUserObj\",value:function changeUserObj(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify(data)}).then(this._checkRes);}},{key:\"createCard\",value:function createCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify(data)}).then(this._checkRes);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._url,\"/cards/\").concat(id),{method:'DELETE',headers:this._headers}).then(this._checkRes);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(isLiked){return fetch(\"\".concat(this._url,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:this._headers}).then(this._checkRes);}else{return fetch(\"\".concat(this._url,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:this._headers}).then(this._checkRes);}}},{key:\"changeAvatar\",value:function changeAvatar(avatar){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify(avatar)}).then(this._checkRes);}}]);return Api;}();export var api=new Api({url:'https://mesto.nomoreparties.co/v1/cohort-59/',headers:{authorization:'04fe2fa3-c86b-49c0-922d-ad413859efcc','Content-Type':'application/json'}});","map":{"version":3,"names":["Api","_ref","url","headers","_classCallCheck","_url","_headers","_createClass","key","value","_checkRes","res","ok","json","Promise","reject","concat","status","proceedFromServer","all","getInitialCards","getUserObj","fetch","then","changeUserObj","data","method","body","JSON","stringify","createCard","deleteCard","id","changeLikeCardStatus","isLiked","changeAvatar","avatar","api","authorization"],"sources":["C:/Users/Huawei/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor({ url, headers }) {\r\n    this._url = url\r\n    this._headers = headers\r\n  }\r\n\r\n  _checkRes(res) {\r\n    if (res.ok) {\r\n      return res.json()\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`)\r\n    }\r\n  }\r\n\r\n  // Карточки должны отображаться на странице только после получения id пользователя\r\n  proceedFromServer() {\r\n    return Promise.all([this.getInitialCards(), this.getUserObj()])\r\n  }\r\n\r\n  getUserObj() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      headers: this._headers,\r\n    }).then(this._checkRes)\r\n  }\r\n\r\n  // Загрузка карточек \r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      headers: this._headers,\r\n    }).then(this._checkRes)\r\n  }\r\n\r\n\r\n  changeUserObj(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._checkRes)\r\n  }\r\n\r\n  createCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(this._checkRes)\r\n  }\r\n\r\n  \r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then(this._checkRes)\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._url}/cards/${id}/likes`, {\r\n        method: 'PUT',\r\n        headers: this._headers,\r\n      }).then(this._checkRes)\r\n    } else {\r\n      return fetch(`${this._url}/cards/${id}/likes`, {\r\n        method: 'DELETE',\r\n        headers: this._headers,\r\n      }).then(this._checkRes)\r\n    }\r\n  }\r\n\r\n  changeAvatar(avatar) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify(avatar),\r\n    }).then(this._checkRes)\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-59/',\r\n  headers: {\r\n    authorization: '04fe2fa3-c86b-49c0-922d-ad413859efcc',\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}