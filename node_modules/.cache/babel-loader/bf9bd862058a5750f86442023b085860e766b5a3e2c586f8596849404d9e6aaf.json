{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    // если ошибка, прописываем, что ошибка\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  _request(endpoint, options) {\n    return fetch(`${this._baseUrl}${endpoint}`, options).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return this._request(\"/users/me\", {\n      headers: this._headers\n    });\n  }\n  getInitialCards() {\n    return this._request(\"/cards\", {\n      headers: this._headers\n    });\n  }\n  editProfile(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return this._request(\"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    });\n  }\n  addNewCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return this._request(\"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._request(`/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    });\n  }\n  addNewAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return this._request(\"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    });\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return this._request(`/cards/${cardId}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-59\",\n  headers: {\n    authorization: \"cb509dca-886f-481d-bcb8-759a1762ab1b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","_request","endpoint","fetch","then","getUserInfo","getInitialCards","editProfile","_ref","name","about","method","body","JSON","stringify","addNewCard","_ref2","link","deleteCard","cardId","addNewAvatar","_ref3","avatar","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/Huawei/Desktop/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n\r\n    // если ошибка, прописываем, что ошибка\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  _request(endpoint, options) {\r\n    return fetch(`${this._baseUrl}${endpoint}`, options).then(\r\n      this._checkResponse\r\n    );\r\n  }\r\n\r\n  getUserInfo() {\r\n    return this._request(\"/users/me\", {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._request(\"/cards\", {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  editProfile({ name, about }) {\r\n    return this._request(\"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      }),\r\n    });\r\n  }\r\n\r\n  addNewCard({ name, link }) {\r\n    return this._request(\"/cards\", {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return this._request(`/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  addNewAvatar({ avatar }) {\r\n    return this._request(\"/users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: avatar,\r\n      }),\r\n    });\r\n  }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return this._request(`/cards/${cardId}/likes`, {\r\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\r\n      headers: this._headers,\r\n    });\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-59\",\r\n  headers: {\r\n    authorization: \"cb509dca-886f-481d-bcb8-759a1762ab1b\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}